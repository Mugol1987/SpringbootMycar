<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qf.dao.SdkInterfaceParmMapper">
  <resultMap id="BaseResultMap" type="com.qf.pojo.SdkInterfaceParm">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="interface_id" jdbcType="INTEGER" property="interfaceId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="parm_name" jdbcType="VARCHAR" property="parmName" />
    <result column="data_type" jdbcType="INTEGER" property="dataType" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="is_required" jdbcType="INTEGER" property="isRequired" />
    <result column="is_custom" jdbcType="INTEGER" property="isCustom" />
    <result column="is_login" jdbcType="INTEGER" property="isLogin" />
    <result column="activity_key" jdbcType="INTEGER" property="activityKey" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, interface_id, name, parm_name, data_type, description, is_required, is_custom, 
    is_login, activity_key
  </sql>
  <select id="selectByExample" parameterType="com.qf.pojo.SdkInterfaceParmExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sdk_interface_parm
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.qf.pojo.SdkInterfaceParmExample">
    delete from sdk_interface_parm
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qf.pojo.SdkInterfaceParm">
    insert into sdk_interface_parm (id, interface_id, name, 
      parm_name, data_type, description, 
      is_required, is_custom, is_login, 
      activity_key)
    values (#{id,jdbcType=INTEGER}, #{interfaceId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{parmName,jdbcType=VARCHAR}, #{dataType,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, 
      #{isRequired,jdbcType=INTEGER}, #{isCustom,jdbcType=INTEGER}, #{isLogin,jdbcType=INTEGER}, 
      #{activityKey,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.qf.pojo.SdkInterfaceParm">
    insert into sdk_interface_parm
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="interfaceId != null">
        interface_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="parmName != null">
        parm_name,
      </if>
      <if test="dataType != null">
        data_type,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="isRequired != null">
        is_required,
      </if>
      <if test="isCustom != null">
        is_custom,
      </if>
      <if test="isLogin != null">
        is_login,
      </if>
      <if test="activityKey != null">
        activity_key,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="interfaceId != null">
        #{interfaceId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="parmName != null">
        #{parmName,jdbcType=VARCHAR},
      </if>
      <if test="dataType != null">
        #{dataType,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="isRequired != null">
        #{isRequired,jdbcType=INTEGER},
      </if>
      <if test="isCustom != null">
        #{isCustom,jdbcType=INTEGER},
      </if>
      <if test="isLogin != null">
        #{isLogin,jdbcType=INTEGER},
      </if>
      <if test="activityKey != null">
        #{activityKey,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qf.pojo.SdkInterfaceParmExample" resultType="java.lang.Long">
    select count(*) from sdk_interface_parm
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sdk_interface_parm
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.interfaceId != null">
        interface_id = #{record.interfaceId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.parmName != null">
        parm_name = #{record.parmName,jdbcType=VARCHAR},
      </if>
      <if test="record.dataType != null">
        data_type = #{record.dataType,jdbcType=INTEGER},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.isRequired != null">
        is_required = #{record.isRequired,jdbcType=INTEGER},
      </if>
      <if test="record.isCustom != null">
        is_custom = #{record.isCustom,jdbcType=INTEGER},
      </if>
      <if test="record.isLogin != null">
        is_login = #{record.isLogin,jdbcType=INTEGER},
      </if>
      <if test="record.activityKey != null">
        activity_key = #{record.activityKey,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sdk_interface_parm
    set id = #{record.id,jdbcType=INTEGER},
      interface_id = #{record.interfaceId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      parm_name = #{record.parmName,jdbcType=VARCHAR},
      data_type = #{record.dataType,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR},
      is_required = #{record.isRequired,jdbcType=INTEGER},
      is_custom = #{record.isCustom,jdbcType=INTEGER},
      is_login = #{record.isLogin,jdbcType=INTEGER},
      activity_key = #{record.activityKey,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>